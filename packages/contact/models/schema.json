{
  "openapi": "3.0.1",
  "info": {
    "title": "Contacts Rest API",
    "version": "v1.0.0",
    "description": "Infinicloud CLI autogenerated schemas"
  },
  "security": [
    {
      "Cognito": ["aws.cognito.signin.user.admin"]
    }
  ],
  "paths": {
    "/api/Meta/category": {
      "get": {
        "description": "Meta category with count",
        "operationId": "metacategory",
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "Current page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "SK",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcategory",
            "in": "query",
            "description": "Filter by subcategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meta"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/Meta/subcategory": {
      "get": {
        "description": "Meta subcategory with count",
        "operationId": "metasubcategory",
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "Current page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "SK",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcategory",
            "in": "query",
            "description": "Filter by subcategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meta"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "description": "List",
        "operationId": "list",
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "Current page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "enum": ["date", "category", "rating"]
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Sort by category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcategory",
            "in": "query",
            "description": "Filter by subcategory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create",
        "operationId": "create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update",
        "operationId": "update",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/{SK}": {
      "get": {
        "description": "ReadOne",
        "operationId": "read",
        "parameters": [
          {
            "name": "SK",
            "required": true,
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSuccess"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-amazon-apigateway-request-validators": {
    "Validate query string parameters and headers": {
      "validateRequestParameters": true,
      "validateRequestBody": false
    }
  },
  "components": {
    "schemas": {
      "Meta": {
        "additionalProperties": {
          "type": "string"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Error code"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message"
          },
          "success": {
            "type": "boolean",
            "description": "false"
          }
        }
      },
      "List": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "total": {
            "type": "integer",
            "description": "Item count",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "$ref": "#/components/schemas/Contact"
          }
        ]
      },
      "ItemSuccess": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Item"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Entity": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "ID": {
                "type": "string",
                "description": "Partition Key"
              },
              "SK": {
                "type": "string",
                "description": "Sort Key"
              },
              "Subcategory": {
                "type": "string",
                "description": "SubCategory - Global Secondary Index"
              },
              "tempID": {
                "type": "string",
                "description": "Optional ID. Can be used by front-end to identify new items."
              },
              "enabled": {
                "type": "boolean",
                "description": "Item is enabled or disabled"
              },
              "USERID": {
                "type": "string",
                "description": "Item creator userid"
              },
              "NAME": {
                "type": "string",
                "description": "Item creator name"
              },
              "EMAIL": {
                "type": "string",
                "description": "Item creator email"
              },
              "PICTURE": {
                "type": "string",
                "description": "Item creator picture url"
              },
              "Count": {
                "type": "string",
                "description": "Meta Data Item Count"
              },
              "createdAt": {
                "type": "string",
                "description": "Creation date in ISO 8601 format"
              },
              "updatedAt": {
                "type": "string",
                "description": "Last updated date in ISO 8601 format"
              },
              "relatedWith": {
                "type": "array",
                "description": "Relation in the graph",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "required": ["PK", "SK", "Subcategory"]
      },
      "Contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "telephones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
